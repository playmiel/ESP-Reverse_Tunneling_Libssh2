name: CI

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

jobs:
  build-and-lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python (PlatformIO dependency)
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Cache PlatformIO
        uses: actions/cache@v4
        with:
          path: ~/.platformio
          key: pio-${{ runner.os }}-${{ hashFiles('**/platformio.ini') }}
          restore-keys: |
            pio-${{ runner.os }}-

      - name: Install PlatformIO
        run: pip install --upgrade platformio

      - name: Language guard (no French)
        run: bash scripts/check_no_french.sh

      - name: Build (library + example)
        run: |
          pio run

      - name: Archive firmware
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: firmware
          path: .pio/build/**/firmware*.bin

  language-only:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v4
      - name: Language guard
        run: bash scripts/check_no_french.shname: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ "**" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: arduino-3
            platform_url: https://github.com/pioarduino/platform-espressif32/releases/download/55.03.30-2/platform-espressif32.zip
          - name: arduino-rc
            platform_url: https://github.com/pioarduino/platform-espressif32/releases/download/53.03.10-rc3/platform-espressif32.zip
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Cache PlatformIO
        uses: actions/cache@v4
        with:
          path: |
            ~/.platformio/.cache
          key: pio-${{ runner.os }}-${{ hashFiles('**/platformio.ini') }}
          restore-keys: |
            pio-${{ runner.os }}-

      - name: Install PlatformIO
        run: |
          python -m pip install --upgrade pip
          pip install platformio

      - name: Show PlatformIO Core version
        run: pio --version

      - name: Build ${{ matrix.name }}
        run: |
          pio run -e ${{ matrix.name }}

      # Optional: build both envs in matrix already covers examples
